/* 33. Write a program to demonstrate functionalities of this keyword in java. 
*/

import java.util.Scanner;

class Student {
	
	private int rno;
	private String name;
	private static int count;

	Student(){
		this(100,"null");
	}
	Student(int rno,String name){
		this.rno = rno;
		this.name = name;
		count++;
	}
	void setData(int rno,String name){
		this.rno = rno;
		this.name = name;
	}
	void showData(){
		System.out.print("\nRoll no : " + rno + "\nName : " + name + "\nStudent Count : " + count + "\n\n");
	}
}

class StudentDemo{
	public static void main(String []args){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Roll no. : " );
		int rno = sc.nextInt();
		System.out.println("Enter Name : ");
		String name = sc.next();
		Student s1 = new Student();
		s1.showData();
		s1.setData(rno,name);
		s1.showData();

		System.out.println("Enter Roll no. : " );
		rno = sc.nextInt();
		System.out.println("Enter Name : ");
		name = sc.next();
		Student s2 = new Student(rno,name);
		s2.showData();
	}
}	


/* 34. Create a class Circle that has two data members, one to store the radius and another to store area and three methods first init() method to input radius from user, second calculateArea() method to calculate area of circle and third display() method to display values of radius and area. Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.
*/


import java.util.Scanner;

class Circle{
	private double radius;
	private double area;
	
	Circle(){
		this.radius = 0;
		this.area = 0;
	}
	void init(){
		System.out.println("Enter Radius : " );
		Scanner sc = new Scanner(System.in);
		this.radius = sc.nextInt();
	}
	void calculateArea(){
		area = (22/7)*radius*radius;
	}
	void display(){
		System.out.println("\nArea of circle : " + area);
	}
}

class CircleDemo{
	public static void main(String []args){
		Circle c1 = new Circle();
		c1.display();
		c1.init();
		c1.calculateArea();
		c1.display();
		}
}

/* 35. Create a class MathOperation that has four static methods. add() method that takes two integer numbers as parameter and returns the sum of the numbers. subtract() method that takes two integer numbers as parameter and returns the difference of the numbers. multiply() method that takes two integer numbers as parameter and returns the product. power() method that takes two integer numbers as parameter and returns the power of first number to second number. Create another class Demo (main class) that takes the two numbers from the user and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.
*/


import java.util.Scanner;

class MathOperation{
	
	static int add(int a, int b){
		return a+b;
	}
	static int substract(int a, int b){
		return a-b;
	}
	static int multiply(int a, int b){
		return a*b;
	}
	static int power(int a,int b){
		int pow = 1;
		for(int i=1;i<=b;i++){
			pow*=a;
		}
		return pow;
	}
}

class Demo{
	public static void main(String []args){
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter two no : " );
		int a = sc.nextInt();
		int b = sc.nextInt();
		System.out.println("Addition : " + MathOperation.add(a,b));
		System.out.println("\nSubstraction : " + MathOperation.substract(a,b));
		System.out.println("\nMultiplication : " + MathOperation.multiply(a,b));
		System.out.println("\nPower of "+a+" raise to "+b+ " : " + MathOperation.power(a,b));
	}
}

/* 36. Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.  two integers 
b.  three floats 
c.  all elements of array 
d. one double and one integer
*/


import java.util.Scanner;

class MathOperation{

	static int multiply(int a,int b){
		return a*b;
	}
	
	static float multiply(float a,float b,float c){
		return a*b*c;
	}
	
	static int multiply(int []arr){

		int mul = arr[0];
		for(int i=1;i<arr.length;i++){
			mul*=arr[i];
		}
		return mul;
	}
	
	static double multiply(double a,int b){
		
		return (double)(a*b);
	}
} 



class Demo{
	public static void main(String []args){
		Scanner sc = new Scanner(System.in);
		System.out.println("a) Enter two Interger value :");
		int a = sc.nextInt();
		int b = sc.nextInt();
		System.out.println("Multiplication : " + MathOperation.multiply(a,b));
		System.out.println("\nb) Enter 3 Float value : ");
		float c = sc.nextFloat();
		float d = sc.nextFloat();
		float e = sc.nextFloat();
		System.out.println("Multiplication : " + MathOperation.multiply(c,d,e));  // or MathOperation.multiply(2.1f,3.5f,4.5f)
		System.out.println("\nc) Enter An Array length : ");
		a = sc.nextInt();
		int arr[] = new int[a];
		for(int i=0;i<a;i++){
			arr[i] = sc.nextInt();
		}
		System.out.println("Multilplication : " + MathOperation.multiply(arr));
		System.out.println("\nd) Enter 1 double & 1 interger no : ");
		double g = sc.nextDouble();
		a = sc.nextInt();
		System.out.println("Multiplication : " + MathOperation.multiply(g,a));
		}
}

/* methods.
38. Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a. Only parameterized constructor. [Do not overload the constructor]
b. totalSalary always represents salary total of all the employees created.
c. empNo should be auto incremented.
d. display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.
*/


import java.util.Scanner;

class Employee{
	
	private int empNo;
	private double salary;
	private static double totalSalary;
	// static double totalSalary;
	Employee(double salary){
		
		this.salary = salary;
		totalSalary += salary;
	}
	void displayEmployee(){
		
		System.out.println("\nEmployee No. : " + empNo + "  Salary : " + salary);
	}
	void setEmpNo(int i){
		empNo = i;
	}

	static void  displayTotalSalary(){
		System.out.println("\nTotal Salary : " + totalSalary);
	}
}

class EmployeeDemo{
	
	public static void main(String []args){
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Total Employee : ");
		int no = sc.nextInt();
		Employee arr[] = new Employee[no];
		for(int i=0;i<no;i++){
			
			System.out.println("Enter Salary for "+(i+1)+"th Employee : " );
			double str = sc.nextDouble();
			arr[i] = new Employee(str);
			arr[i].setEmpNo(i+1);
		}


		for(Employee i : arr){
			
			i.displayEmployee();
		}
		Employee.displayTotalSalary();
		//Employee.totalSalary;
	}
}
/* 39. Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )
*/


import java.util.Scanner;

class Product{
	
	private int pid;
	private double price;
	private int quantity;

	Product(int pid,double price, int quantity){

		this.pid = pid;
		this.price = price;
		this.quantity = quantity;
	}
	
	double getPrice(){
		return price;
	}

	int getPid(){
		return pid;
	}

	static double totalAmount(Product arr[]){
	
		double sum = 0;
		for(Product i : arr){
			
			sum+=(i.price*i.quantity);
		}
		return sum;
	}
}

class ProductDemo{

	public static void main(String []args){

		Scanner sc = new Scanner(System.in);
		Product arr[] = new Product[5];
		for(int i=0;i<5;i++){
			System.out.println("Enter Product Pid : ");
			int pid = sc.nextInt();
			System.out.println("Enter Product Price : ");
			double price = sc.nextDouble();
			System.out.println("Enter Product Quantity : ");
			int quantity = sc.nextInt();
			arr[i] = new Product(pid,price,quantity);
		}

		double max = 0;
		Product index = arr[0] ;
		for(Product i : arr){		
			if(max < i.getPrice()){
				max = i.getPrice();
				index = i;
			}
		}
		System.out.println("\nPid with highest Price (Rs.) " + index.getPrice() + " is : " + index.getPid());
		System.out.println("\nTotal Amount Spend on All products : (Rs.) " + Product.totalAmount(arr));
	}
}
/* 41. Write a program to demonstrate this() construct functionality.
*/



import java.util.Scanner;

class Student{
	private int rollno;
	private String name;
	
	Student(){
		this(0,"none");
	}
	
	Student(int rollno,String name){
		this.rollno = rollno;
		this.name = name;
	}
	
	void display(){
	
		System.out.println("\nName : " + name + "\nRoll no : " + rollno + "\n");
	}
	
}

class StudentDemo{
	public static void main(String []args){

		Student s1 = new Student();
		s1.display();
		Student s2 = new Student(3,"Adinath");
		s2.display();
	}
}

/* 43. Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats. 
*/


import java.util.Scanner;

class OneBHK{
		private double roomArea;
		private double hallArea;
		private double price;
		
		OneBHK(){
			roomArea = 1000;
			hallArea = 3000;
			price = 1_00_000;
		}
		
		OneBHK(double roomArea,double hallArea,double price){

			this.roomArea = roomArea;
			this.hallArea = hallArea;
			this.price = price;
		}

		double getRoomArea(){
			return roomArea;
		}
		double getHallArea(){
			return hallArea;
		}

		double getPrice(){
			return price;
		}

		void show(){
			System.out.println("1 BHK : \nRoom Area : "+ roomArea + "\nHall Area : " + hallArea + "\nPrice : " + price);
		}
}

class TwoBHK extends OneBHK{
		private double room2Area;

		TwoBHK(){
			super();
			room2Area = 1500;
			}

		TwoBHK(double room2Area){
			super();
			this.room2Area = room2Area;
		}

		TwoBHK(double room1Area,double room2Area,double hallArea,double price){
			super(room1Area,hallArea,price);
			this.room2Area = room2Area;
		}

		void show(){
			System.out.println("\n2 BHK : \nRoom Area : "+ this.getRoomArea()+"\nRoom 2 Area : "+ room2Area + "\nHall Area : " + this.getHallArea() + "\nPrice : " + this.getPrice()+"\n");
		}
}

class Demo{
		public static void main(String []args){
			Scanner sc = new Scanner(System.in);
			System.out.println("Enter 1 BHK Detail : ");
			System.out.println("\nEnter Room 1 Area : ");
			double room1 = sc.nextDouble();
			System.out.println("Enter Room 2 Area : ");
			double room2 = sc.nextDouble();
			System.out.println("Enter Hall Room Area : ");
			double hallroom = sc.nextDouble();
			System.out.println("Enter Price : ");
			double price = sc.nextDouble();
			TwoBHK b1 = new TwoBHK(room1,room2,hallroom, price);
				
			System.out.println("Enter Room 2 Area : ");
			room2 = sc.nextDouble();
	 		TwoBHK b2 = new TwoBHK(room2);
			
			TwoBHK b3 = new TwoBHK();
			
			b1.show();
			b2.show();
			b3.show();
			
			price = b1.getPrice() + b2.getPrice() + b3.getPrice();
			System.out.println("Total Amount of Flats (Rs): "+price);
	}
} 
	
